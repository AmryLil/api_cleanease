// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Authenticate user with email/username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authentication"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseAuth"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            }
        },
        "/packages": {
            "get": {
                "description": "Get all laundry packages with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Laundry Packages"
                ],
                "summary": "Get all laundry packages",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 5,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all packages success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseGetAllSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dtos.ResPackages"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/helpers.Pagination"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid pagination data",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "404": {
                        "description": "No packages found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            }
        },
        "/services": {
            "get": {
                "description": "Get all laundry services with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Get all laundry services",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 5,
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get all services success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseGetAllSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dtos.ResServices"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/definitions/helpers.Pagination"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid pagination data",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "404": {
                        "description": "No services found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create one or multiple new laundry services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Create new laundry services",
                "parameters": [
                    {
                        "description": "Array of service data",
                        "name": "services",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dtos.InputServices"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Create services success",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseCUDSuccess"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            }
        },
        "/services/{id}": {
            "get": {
                "description": "Get detailed information of a specific laundry service by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Get service details",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get service detail success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/helpers.ResponseGetDetailSuccess"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dtos.ResServices"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid service ID",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing laundry service by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Update laundry service",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated service data",
                        "name": "service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.InputServices"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Update service success",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseCUDSuccess"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or validation error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing laundry service by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Services"
                ],
                "summary": "Delete laundry service",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "description": "Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete service success",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseCUDSuccess"
                        }
                    },
                    "400": {
                        "description": "Invalid service ID",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Service not found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Retrieve a paginated list of all users in the system",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get all users with pagination",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 5,
                        "description": "Items per page",
                        "name": "page_size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseGetAllSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "description": "Create a new user with the provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.InputUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseCUDSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "Retrieve detailed information about a specific user by their ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseGetDetailSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update user information by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Update an existing user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Updated user information",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.InputUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseCUDSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseCUDSuccess"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/helpers.ResponseError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.InputServices": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dtos.InputUser": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "password123"
                },
                "user_type": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "dtos.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "john@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "password123"
                }
            }
        },
        "dtos.ResPackages": {
            "type": "object",
            "properties": {
                "cover": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "price_per_kg": {
                    "type": "number"
                }
            }
        },
        "dtos.ResServices": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "packages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.ResPackages"
                    }
                }
            }
        },
        "helpers.Pagination": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer",
                    "example": 1
                },
                "next_page": {
                    "type": "integer",
                    "example": 2
                },
                "page_size": {
                    "type": "integer",
                    "example": 5
                },
                "previous_page": {
                    "type": "integer",
                    "example": 0
                },
                "total_data": {
                    "type": "integer",
                    "example": 50
                },
                "total_page": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "helpers.ResponseAuth": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "error message"
                },
                "status": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "helpers.ResponseCUDSuccess": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Success"
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseError": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Error message"
                },
                "status": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "helpers.ResponseGetAllSuccess": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "success message"
                },
                "pagination": {
                    "$ref": "#/definitions/helpers.Pagination"
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "helpers.ResponseGetDetailSuccess": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "success message"
                },
                "status": {
                    "type": "boolean",
                    "example": true
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8001",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "CleanEase API",
	Description:      "API for CleanEase laundry management system",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
